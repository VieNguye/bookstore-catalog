name: CI/CD Catalog Service

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - '**/*.md'
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: ðŸ”¨ Build Docker Images
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build catalog-service Docker Image (no push)
      uses: docker/build-push-action@v5
      with:
        context: ./catalog-service
        file: ./catalog-service/Dockerfile
        push: false
        tags: catalog-service:test

    - name: Build shopping-cart-service Docker Image (no push)
      uses: docker/build-push-action@v5
      with:
        context: ./shopping-cart-service
        file: ./shopping-cart-service/Dockerfile
        push: false
        tags: shopping-cart-service:test

  test:
    name: âœ… Test Docker Images
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Run Tests (placeholder)
      run: echo "ðŸ§ª Add your integration/unit tests here"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push catalog-service
      uses: docker/build-push-action@v5
      with:
        context: ./catalog-service
        file: ./catalog-service/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/catalog-service:latest

    - name: Build & Push shopping-cart-service
      uses: docker/build-push-action@v5
      with:
        context: ./shopping-cart-service
        file: ./shopping-cart-service/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/shopping-cart-service:latest

  deploy:
    name: ðŸš€ Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
        
    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/
